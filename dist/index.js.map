{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Dropshift extends Component {\n  static propTypes = {\n    text: PropTypes.string\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  handleDocumentClick = e => {\n    if (e.target !== this.menuRef) {\n      this.toggleMenu();\n    }\n  };\n\n  handleFocus = e => {\n    if (e.target instanceof Element && !this.menuRef.contains(e.target)) {\n      this.toggleMenu();\n    }\n  };\n\n  handleBlur = () => {\n    setTimeout(() => {\n      if (document.activeElement === document.body) {\n        this.toggleMenu();\n      }\n    }, 0);\n  };\n\n  toggleMenu = () => {\n    this.setState(\n      state => ({ isOpen: !state.isOpen }),\n      () => {\n        if (this.state.isOpen) {\n          document.addEventListener(\"click\", this.handleDocumentClick);\n          window.addEventListener(\"focus\", this.handleFocus, true);\n          window.addEventListener(\"blur\", this.handleBlur, false);\n        } else {\n          document.removeEventListener(\"click\", this.handleDocumentClick);\n          window.removeEventListener(\"focus\", this.handleFocus, true);\n          window.removeEventListener(\"blur\", this.handleBlur, false);\n        }\n      }\n    );\n  };\n\n  getToggleButtonProps = () => ({\n    onClick: () => {\n      this.toggleMenu();\n    }\n  });\n\n  getMenuProps = () => ({\n    ref: elem => (this.menuRef = elem),\n    [\"aria-expanded\"]: this.state.isOpen,\n    [\"role\"]: \"navigation\"\n  });\n\n  render() {\n    const { children } = this.props;\n    const { getToggleButtonProps, getMenuProps } = this;\n\n    return (\n      <Fragment>\n        {children({\n          ...this.state,\n          getToggleButtonProps,\n          getMenuProps\n        })}\n      </Fragment>\n    );\n  }\n}\n"],"names":["Dropshift","state","handleDocumentClick","e","target","menuRef","toggleMenu","handleFocus","Element","contains","handleBlur","document","activeElement","body","setState","isOpen","addEventListener","removeEventListener","getToggleButtonProps","getMenuProps","elem","children","props","React","Component","propTypes","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGqBA;;;;;;;;;;;;;;2LAKnBC,QAAQ;cACE;aAGVC,sBAAsB,aAAK;UACrBC,EAAEC,MAAF,KAAa,MAAKC,OAAtB,EAA+B;cACxBC,UAAL;;aAIJC,cAAc,aAAK;UACbJ,EAAEC,MAAF,YAAoBI,OAApB,IAA+B,CAAC,MAAKH,OAAL,CAAaI,QAAb,CAAsBN,EAAEC,MAAxB,CAApC,EAAqE;cAC9DE,UAAL;;aAIJI,aAAa,YAAM;iBACN,YAAM;YACXC,SAASC,aAAT,KAA2BD,SAASE,IAAxC,EAA8C;gBACvCP,UAAL;;OAFJ,EAIG,CAJH;aAOFA,aAAa,YAAM;YACZQ,QAAL,CACE;eAAU,EAAEC,QAAQ,CAACd,MAAMc,MAAjB,EAAV;OADF,EAEE,YAAM;YACA,MAAKd,KAAL,CAAWc,MAAf,EAAuB;mBACZC,gBAAT,CAA0B,OAA1B,EAAmC,MAAKd,mBAAxC;iBACOc,gBAAP,CAAwB,OAAxB,EAAiC,MAAKT,WAAtC,EAAmD,IAAnD;iBACOS,gBAAP,CAAwB,MAAxB,EAAgC,MAAKN,UAArC,EAAiD,KAAjD;SAHF,MAIO;mBACIO,mBAAT,CAA6B,OAA7B,EAAsC,MAAKf,mBAA3C;iBACOe,mBAAP,CAA2B,OAA3B,EAAoC,MAAKV,WAAzC,EAAsD,IAAtD;iBACOU,mBAAP,CAA2B,MAA3B,EAAmC,MAAKP,UAAxC,EAAoD,KAApD;;OAVN;aAgBFQ,uBAAuB;aAAO;iBACnB,mBAAM;gBACRZ,UAAL;;OAFmB;aAMvBa,eAAe;;;;aACR;iBAAS,MAAKd,OAAL,GAAee,IAAxB;;+BACJ,eAFY,EAEM,MAAKnB,KAAL,CAAWc,MAFjB,yBAGZ,MAHY,EAGH,YAHG;;;;;;6BAMN;UACCM,QADD,GACc,KAAKC,KADnB,CACCD,QADD;UAECH,oBAFD,GAEwC,IAFxC,CAECA,oBAFD;UAEuBC,YAFvB,GAEwC,IAFxC,CAEuBA,YAFvB;;;aAKLI;sBAAA;;8BAEO,KAAKtB,KADT;oDAAA;;;OAFL;;;;EA9DmCuB;;AAAlBxB,UACZyB,YAAY;QACXC,UAAUC;;;;;"}